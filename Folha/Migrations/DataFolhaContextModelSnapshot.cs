// <auto-generated />
using System;
using Folha.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Folha.Migrations
{
    [DbContext(typeof(DataFolhaContext))]
    partial class DataFolhaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Folha.Models.Contracheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MesDeReferencia")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalarioLiquido")
                        .HasColumnType("money");

                    b.Property<decimal>("TotalDeDescontos")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Contracheques");
                });

            modelBuilder.Entity("Folha.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataDeAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DescontoNoPlanoDeSaude")
                        .HasColumnType("bit");

                    b.Property<bool>("DescontoNoPlanoDental")
                        .HasColumnType("bit");

                    b.Property<bool>("DescontoNoValeTransporte")
                        .HasColumnType("bit");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("SalarioBruto")
                        .HasColumnType("money");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Folha.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContrachequeId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ContrachequeId");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("Folha.Models.Contracheque", b =>
                {
                    b.HasOne("Folha.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Folha.Models.Lancamento", b =>
                {
                    b.HasOne("Folha.Models.Contracheque", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContrachequeId");
                });

            modelBuilder.Entity("Folha.Models.Contracheque", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
